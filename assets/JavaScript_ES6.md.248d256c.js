import{_ as s,c as n,o as a,a as l}from"./app.5f4df9cd.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"1. let、const、var的区别","slug":"_1-let、const、var的区别","link":"#_1-let、const、var的区别","children":[]},{"level":3,"title":"2. 箭头函数与普通函数的区别","slug":"_2-箭头函数与普通函数的区别","link":"#_2-箭头函数与普通函数的区别","children":[]},{"level":3,"title":"3. const对象的属性可以修改吗","slug":"_3-const对象的属性可以修改吗","link":"#_3-const对象的属性可以修改吗","children":[]},{"level":3,"title":"4. 如果new一个箭头函数的会怎么样","slug":"_4-如果new一个箭头函数的会怎么样","link":"#_4-如果new一个箭头函数的会怎么样","children":[]},{"level":3,"title":"5. 对 rest 参数的理解","slug":"_5-对-rest-参数的理解","link":"#_5-对-rest-参数的理解","children":[]},{"level":3,"title":"6. ES6中模板语法与字符串处理","slug":"_6-es6中模板语法与字符串处理","link":"#_6-es6中模板语法与字符串处理","children":[]},{"level":3,"title":"7. 扩展运算符的作用及使用场景","slug":"_7-扩展运算符的作用及使用场景","link":"#_7-扩展运算符的作用及使用场景","children":[]},{"level":3,"title":"8.Proxy可以实现什么功能","slug":"_8-proxy可以实现什么功能","link":"#_8-proxy可以实现什么功能","children":[]},{"level":3,"title":"9. 对对象与数组的解构的理解","slug":"_9-对对象与数组的解构的理解","link":"#_9-对对象与数组的解构的理解","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]}],"relativePath":"JavaScript/ES6.md","lastUpdated":null}'),p={name:"JavaScript/ES6.md"},e=l(`<h3 id="_1-let、const、var的区别" tabindex="-1">1. let、const、var的区别 <a class="header-anchor" href="#_1-let、const、var的区别" aria-hidden="true">#</a></h3><p>var是最先的，在块级作用域诞生之前就有了，所以var没有块级作用域。存在变量提升，var声明的变量会被添加到全局，可以重复声明</p><p>let和const，有块级作用域，没有变量提升，声明前不能使用，称为暂时性死区，声明的变量不会添加到全局，不能重复声明。</p><p>const：是常量，声明时必须定义，var和let声明时可以不赋值，const一但赋值后不可变</p><table><thead><tr><th><strong>区别</strong></th><th><strong>var</strong></th><th><strong>let</strong></th><th><strong>const</strong></th></tr></thead><tbody><tr><td>是否有块级作用域</td><td>×</td><td>✔️</td><td>✔️</td></tr><tr><td>是否存在变量提升</td><td>✔️</td><td>×</td><td>×</td></tr><tr><td>是否添加全局属性</td><td>✔️</td><td>×</td><td>×</td></tr><tr><td>能否重复声明变量</td><td>✔️</td><td>×</td><td>×</td></tr><tr><td>是否存在暂时性死区</td><td>×</td><td>✔️</td><td>✔️</td></tr><tr><td>是否必须设置初始值</td><td>×</td><td>×</td><td>✔️</td></tr><tr><td>能否改变指针指向</td><td>✔️</td><td>✔️</td><td>×</td></tr></tbody></table><h3 id="_2-箭头函数与普通函数的区别" tabindex="-1">2. 箭头函数与普通函数的区别 <a class="header-anchor" href="#_2-箭头函数与普通函数的区别" aria-hidden="true">#</a></h3><ul><li>箭头函数写法更简洁</li><li>箭头函数没有自己的this，箭头函数中的this指向上一级的this</li><li>call、bind、apply没法改变箭头函数的this</li><li>箭头函数不能作为构造函数使用，没有prototype</li><li>箭头函数没有arguments</li><li>箭头函数不能作为generator，不能使用yield关键字</li></ul><h3 id="_3-const对象的属性可以修改吗" tabindex="-1">3. const对象的属性可以修改吗 <a class="header-anchor" href="#_3-const对象的属性可以修改吗" aria-hidden="true">#</a></h3><p>可以修改，地址不变即可。</p><h3 id="_4-如果new一个箭头函数的会怎么样" tabindex="-1">4. 如果new一个箭头函数的会怎么样 <a class="header-anchor" href="#_4-如果new一个箭头函数的会怎么样" aria-hidden="true">#</a></h3><p>不能new一个箭头函数</p><p>new：</p><ol><li>创建一个对象</li><li>将对象的proto指向构造函数的prototype（箭头函数没有prototype）</li><li>构造函数中的this指向创建的实例（箭头函数的this永远指向所在作用域的this）</li><li>返回创建的对象</li></ol><h3 id="_5-对-rest-参数的理解" tabindex="-1">5. 对 rest 参数的理解 <a class="header-anchor" href="#_5-对-rest-参数的理解" aria-hidden="true">#</a></h3><p>用...接收不确定个数的参数。</p><h3 id="_6-es6中模板语法与字符串处理" tabindex="-1">6. ES6中模板语法与字符串处理 <a class="header-anchor" href="#_6-es6中模板语法与字符串处理" aria-hidden="true">#</a></h3><p>\`\${name}+&#39;str&#39;\`</p><h3 id="_7-扩展运算符的作用及使用场景" tabindex="-1">7. 扩展运算符的作用及使用场景 <a class="header-anchor" href="#_7-扩展运算符的作用及使用场景" aria-hidden="true">#</a></h3><ol><li>用来浅拷贝对象、复制数组</li><li>用来接收参数</li><li>将字符串转为数组</li><li>将数组变成序列</li></ol><h3 id="_8-proxy可以实现什么功能" tabindex="-1">8.Proxy可以实现什么功能 <a class="header-anchor" href="#_8-proxy可以实现什么功能" aria-hidden="true">#</a></h3><p>Proxy：代理，target是代理的对象，可以是obj或func，handlers是该代理对象的各种操作行为处理。</p><p>使用：let proxy = new Proxy(target, handlers)</p><h3 id="_9-对对象与数组的解构的理解" tabindex="-1">9. 对对象与数组的解构的理解 <a class="header-anchor" href="#_9-对对象与数组的解构的理解" aria-hidden="true">#</a></h3><p>数组的解构：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">c</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">,,</span><span style="color:#E5C07B;">c</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> [</span><span style="color:#79B8FF;">a</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">b</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">c</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">3</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> [</span><span style="color:#79B8FF;">a</span><span style="color:#BBBBBB;">,,</span><span style="color:#79B8FF;">c</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#F8F8F8;">3</span><span style="color:#B392F0;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>对象的解构：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">stu</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Bob&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">24</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">age</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">stu</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//可以多层嵌套解构</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">school</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#E06C75;">classes</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Bob&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">classes</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">: { </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;"> } }} </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">school</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">stu</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;Bob&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">24</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> { </span><span style="color:#79B8FF;">name</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">age</span><span style="color:#B392F0;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> stu</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">//可以多层嵌套解构</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">school</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">   classes</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      stu</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">         name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;Bob&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">         age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">24</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">   }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> { classes: { stu: { </span><span style="color:#79B8FF;">name</span><span style="color:#B392F0;"> } }} </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> school</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3>`,28),o=[e];function t(r,c,B,i,y,d){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{h as __pageData,b as default};
