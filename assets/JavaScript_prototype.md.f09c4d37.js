import{_ as e,c as t,o as a,a as r}from"./app.2d43daee.js";const o="/blog/assets/1693228156637.af35d502.png",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"1. 对原型、原型链的理解","slug":"_1-对原型、原型链的理解","link":"#_1-对原型、原型链的理解","children":[]},{"level":3,"title":"2. 原型链的终点是什么？如何打印出原型链的终点？","slug":"_2-原型链的终点是什么-如何打印出原型链的终点","link":"#_2-原型链的终点是什么-如何打印出原型链的终点","children":[]},{"level":3,"title":"3. 如何获得对象非原型链上的属性？","slug":"_3-如何获得对象非原型链上的属性","link":"#_3-如何获得对象非原型链上的属性","children":[]}],"relativePath":"JavaScript/prototype.md","lastUpdated":1693810075000}'),_={name:"JavaScript/prototype.md"},p=r('<p><img src="'+o+'" alt="1693228156637"></p><h3 id="_1-对原型、原型链的理解" tabindex="-1">1. 对原型、原型链的理解 <a class="header-anchor" href="#_1-对原型、原型链的理解" aria-hidden="true">#</a></h3><p>JS的对象中拥有proto这个属性，指向对象原型，也就是构造函数的prototype，js对象可以通过原型继承原型的属性。原型作为对象，也有自己的原型，所以就形成了原型链。ES5新增Object.getPrototypeOf来获取对象原型。</p><h3 id="_2-原型链的终点是什么-如何打印出原型链的终点" tabindex="-1">2. 原型链的终点是什么？如何打印出原型链的终点？ <a class="header-anchor" href="#_2-原型链的终点是什么-如何打印出原型链的终点" aria-hidden="true">#</a></h3><p>null</p><p>console.log(Object.prototype._<em>proto</em>_)</p><h3 id="_3-如何获得对象非原型链上的属性" tabindex="-1">3. 如何获得对象非原型链上的属性？ <a class="header-anchor" href="#_3-如何获得对象非原型链上的属性" aria-hidden="true">#</a></h3><p>for in 遍历所有属性：obj.hasOwnProperty(key)判断是否是非原型链上的属性</p>',8),s=[p];function n(i,l,c,d,h,f){return a(),t("div",null,s)}const g=e(_,[["render",n]]);export{u as __pageData,g as default};
